{"name": "test_remove_from_cart", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"408f88b52a75ffce510e1d7ecd5bb33a\")>\n\n    def test_remove_from_cart(driver):\n        login(driver)\n    \n        # Ürün ekle\n        WebDriverWait(driver, 10).until(\n            EC.element_to_be_clickable((By.XPATH, \"//button[text()='Add to cart']\"))\n        ).click()\n    \n        # Ürün kaldır\n        WebDriverWait(driver, 10).until(\n            EC.element_to_be_clickable((By.XPATH, \"//button[text()='Remove']\"))\n        ).click()\n    \n        # ✅ Badge kaybolana kadar bekle\n>       WebDriverWait(driver, 5).until(\n            EC.invisibility_of_element_located((By.CLASS_NAME, \"shopping_cart_badge\"))\n        )\n\ntest_sauce_demo.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"408f88b52a75ffce510e1d7ecd5bb33a\")>\nmethod = <function invisibility_of_element_located.<locals>._predicate at 0x0000025C7E39C860>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "start": 1753902744124, "stop": 1753902750856, "uuid": "0638fb1a-0172-49f8-8ded-9762606cc3da", "historyId": "fcebcde1916e0e7c6184d4ef6c6063ca", "testCaseId": "fcebcde1916e0e7c6184d4ef6c6063ca", "fullName": "test_sauce_demo#test_remove_from_cart", "labels": [{"name": "suite", "value": "test_sauce_demo"}, {"name": "host", "value": "DESKTOP-NJIFH96"}, {"name": "thread", "value": "12836-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_sauce_demo"}], "titlePath": ["test_sauce_demo.py"]}